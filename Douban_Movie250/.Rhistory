qplot(age, circumference, data = Orange, geom = "line", colour = Tree)
data(economics_long)
head(economics_long)
table(economics_long$variable)
qplot(date, value, data=economics_long, geom="point", group="variable")
qplot(date, value, data=economics_long, geom="line", group="variable") +
facet_grid(variable~.)
qplot(date, value, data=economics_long, geom="line", group="variable") +
facet_grid(variable~., scale="free_y")
?facet_grid
library(plotly)
install.packages("plotly")
library(plotly)
ggplotly()
qplot(age, circumference, data = Orange, geom = c("point", "line"), colour = Tree)
ggplotly()
qplot(date, value, data=economics_long, geom="point", group="variable")
?ylim
?scale_y_continuous
??scale_y_continuous
# Load data
unemployment <- read.csv("http://datasets.flowingdata.com/unemployment-rate-1948-2010.csv", sep=",")
unemployment[1:10,]
# Plain scatter plot
plot(1:length(unemployment$Value), unemployment$Value)
# Fitted linear line
lines(c(1,746), c(4.889523,6.42593))
# Scatter plot with loess
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value)
# Fix y-axis to start at zero
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value, ylim=c(0,11), degree=2)
# Change color
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value, ylim=c(0,11), degree=2, col="#CCCCCC", span=0.5)
# Load data
hotdogs <- read.csv("E:\\学习相关\\School Works\\Data Viz\\Assignment\\3\\ch04\\data\\hot-dog-contest-winners.csv", sep=",", header=TRUE)
# Default barchart
barplot(hotdogs$Dogs.eaten)
# Year labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year)
# Axis labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Fill color and border
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col="red", border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight USA colors
fill_colors <- c()
for ( i in 1:length(hotdogs$Country) ) {
if (hotdogs$Country[i] == "United States") {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight record years with color
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Spacing
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.3, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.5, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#3eb24d")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
# Load data
hotdogs <- read.csv("E:\\学习相关\\School Works\\Data Viz\\Assignment\\3\\ch04\\data\\hot-dog-contest-winners.csv", sep=",", header=TRUE)
# Default barchart
barplot(hotdogs$Dogs.eaten)
# Year labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year)
# Axis labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Fill color and border
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col="red", border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight USA colors
fill_colors <- c()
for ( i in 1:length(hotdogs$Country) ) {
if (hotdogs$Country[i] == "United States") {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight record years with color
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#3eb24d")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Spacing
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.3, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.5, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
crime <- read.csv("http://datasets.flowingdata.com/crimeRatesByState-formatted.csv")
stars(crime)
View(crime)
row.names(crime) <- crime$state
crime <- crime[,2:7]
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5))
View(crime)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5), full=FALSE)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5), draw.segments=TRUE)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5))
d <- data.frame(y = rnorm(20, 9, 2),
group = as.factor(rep(c('Post-FAP', 'Post-DEP'), each = 10)),
id = rep(1:10, 2))
View(d)
load("~/Rplot.png")
library(sunburstR)
devtools::install_github("timelyportfolio/sunburstR")
install.packages("devtools")
devtools::install_github("timelyportfolio/sunburstR")
install.packages("http://genome.crg.es/~didac/ggsunburst/ggsunburst_0.0.5.tar.gz", repos=NULL, type="source")
install.packages("ggplot2")
install.packages("rPython")
install.packages("http://genome.crg.es/~didac/ggsunburst/ggsunburst_0.0.5.tar.gz", repos=NULL, type="source")
install.packages("reshape2")
########################################
# what do you know about my film habit #
########################################
library(RCurl)
library(XML)
url1 = "http://movie.douban.com/people/xxxx/collect?start="
url2 = "&sort=time&rating=all&filter=all&mode=grid"
url = c()
for (k in seq(from=0, to=145, by=15)) {
url = c(url,paste(url1, k, url2, sep = ""))
}
attribute.name = c()
attribute.release_date = c()
attribute.run_time = c()
attribute.genre = c()
attribute.num_raters = c()
attribute.rating_dist = c()
attribute.imdb_link = c()
attribute.ctry = c()
for (j in url) {
doc = htmlTreeParse(j, useInternal=TRUE)
hrefs = xpathSApply(doc, "//div/div/div/a", xmlGetAttr, 'href')
subjects = hrefs[grepl("subject", hrefs)]
for (i in subjects) {
url = i
doc =
try(
htmlTreeParse(
url,
useInternal=TRUE))
if(class(doc) == "try-error") next;
attribute.name =
c(
attribute.name,
xpathSApply(doc, "//div[@class='info-area']/strong", xmlValue))
x = xpathSApply(doc, "//div[@id='info']", xmlValue)
ctry =
gsub(
"地区: |语言",
"",
regmatches(x, regexpr('地区:.+?语言', x)))
attribute.ctry =
c(
attribute.ctry,
ifelse(
length(ctry) ==0,
NA,
ctry))
attribute.release_date =
c(
attribute.release_date,
ifelse(
length(xpathSApply(doc, "//div[@id='info']/span[@property='v:initialReleaseDate']", xmlValue)) == 0,
NA,
xpathSApply(doc, "//div[@id='info']/span[@property='v:initialReleaseDate']", xmlValue)))
attribute.run_time =
c(
attribute.run_time,
ifelse(
length(xpathSApply(doc, "//div[@id='info']/span[@property='v:runtime']", xmlValue)) == 0,
NA,
xpathSApply(doc, "//div[@id='info']/span[@property='v:runtime']", xmlValue)))
attribute.genre =
c(
attribute.genre,
list(xpathSApply(doc, "//div[@id='info']/span[@property='v:genre']", xmlValue)))
attribute.num_raters =
c(
attribute.num_raters,
ifelse(
length(xpathSApply(doc, "//div[@class='rating_sum']/a/span[@property='v:votes']", xmlValue)) == 0,
NA,
xpathSApply(doc, "//div[@class='rating_sum']/a/span[@property='v:votes']", xmlValue)))
rating =
as.numeric(
sub(
"%",
"",
xpathSApply(doc, "//div[@class='rating_wrap clearbox']/span[@class='rating_per']", xmlValue)))/100
attribute.rating_dist =
c(
attribute.rating_dist,
ifelse(
length(xpathSApply(doc, "//div[@class='rating_wrap clearbox']/span[@class='rating_per']", xmlValue)) == 0,
NA,
list(rating)))
k = xpathSApply(doc, "//div[@id='info']/a[@target='_blank']", xmlGetAttr, 'href')
link = k[grepl("imdb",k)]
attribute.imdb_link =
c(
attribute.imdb_link,
ifelse(
length(link) == 0,
NA,
link))
}
}
install.packages(RCurl)
install.packages("RCurl")
install.packages("XML")
########################################
# what do you know about my film habit #
########################################
library(RCurl)
library(XML)
url1 = "http://movie.douban.com/people/xxxx/collect?start="
url2 = "&sort=time&rating=all&filter=all&mode=grid"
url = c()
for (k in seq(from=0, to=145, by=15)) {
url = c(url,paste(url1, k, url2, sep = ""))
}
attribute.name = c()
attribute.release_date = c()
attribute.run_time = c()
attribute.genre = c()
attribute.num_raters = c()
attribute.rating_dist = c()
attribute.imdb_link = c()
attribute.ctry = c()
for (j in url) {
doc = htmlTreeParse(j, useInternal=TRUE)
hrefs = xpathSApply(doc, "//div/div/div/a", xmlGetAttr, 'href')
subjects = hrefs[grepl("subject", hrefs)]
for (i in subjects) {
url = i
doc =
try(
htmlTreeParse(
url,
useInternal=TRUE))
if(class(doc) == "try-error") next;
attribute.name =
c(
attribute.name,
xpathSApply(doc, "//div[@class='info-area']/strong", xmlValue))
x = xpathSApply(doc, "//div[@id='info']", xmlValue)
ctry =
gsub(
"地区: |语言",
"",
regmatches(x, regexpr('地区:.+?语言', x)))
attribute.ctry =
c(
attribute.ctry,
ifelse(
length(ctry) ==0,
NA,
ctry))
attribute.release_date =
c(
attribute.release_date,
ifelse(
length(xpathSApply(doc, "//div[@id='info']/span[@property='v:initialReleaseDate']", xmlValue)) == 0,
NA,
xpathSApply(doc, "//div[@id='info']/span[@property='v:initialReleaseDate']", xmlValue)))
attribute.run_time =
c(
attribute.run_time,
ifelse(
length(xpathSApply(doc, "//div[@id='info']/span[@property='v:runtime']", xmlValue)) == 0,
NA,
xpathSApply(doc, "//div[@id='info']/span[@property='v:runtime']", xmlValue)))
attribute.genre =
c(
attribute.genre,
list(xpathSApply(doc, "//div[@id='info']/span[@property='v:genre']", xmlValue)))
attribute.num_raters =
c(
attribute.num_raters,
ifelse(
length(xpathSApply(doc, "//div[@class='rating_sum']/a/span[@property='v:votes']", xmlValue)) == 0,
NA,
xpathSApply(doc, "//div[@class='rating_sum']/a/span[@property='v:votes']", xmlValue)))
rating =
as.numeric(
sub(
"%",
"",
xpathSApply(doc, "//div[@class='rating_wrap clearbox']/span[@class='rating_per']", xmlValue)))/100
attribute.rating_dist =
c(
attribute.rating_dist,
ifelse(
length(xpathSApply(doc, "//div[@class='rating_wrap clearbox']/span[@class='rating_per']", xmlValue)) == 0,
NA,
list(rating)))
k = xpathSApply(doc, "//div[@id='info']/a[@target='_blank']", xmlGetAttr, 'href')
link = k[grepl("imdb",k)]
attribute.imdb_link =
c(
attribute.imdb_link,
ifelse(
length(link) == 0,
NA,
link))
}
}
setwd("E:\\学习相关\\R\\Program_for_Fun\\Douban_Movie250")
year_count <- read.csv("year_count.csv")
library(ggplot2)
View(year_count)
ggplot(year_count, aes(factor(year), count, fill = factor(year)))
+ geom_bar(width = 1)
+ scale_y_continuous(breaks = 0:10)
+ oord_polar() + labs(x = "", y = "")
+ axis.text.x = theme_blank()
+ axis.text.y = theme_blank()
+ axis.ticks = theme_blank()
ggplot(year_count, aes(factor(year), count, fill = factor(year)))
+ geom_bar(width = 1)
+ scale_y_continuous(breaks = 0:10)
+ oord_polar() + labs(x = "", y = "")
ggplot(year_count, aes(factor(year), count, fill = factor(year)))
+ geom_bar(width = 1)
+ scale_y_continuous(breaks = 0:10)
+ coord_polar() + labs(x = "", y = "")
ggplot()
?ggplot
ggplot(year_count, aes(factor(year), count, fill = factor(year)))
+ geom_bar(width = 1)
+ coord_polar()
+ labs(x = "", y = "")
?coord_polar
ggplot(year_count, aes(factor(year), count, fill = factor(year)))
+ geom_bar(width = 1)
+ coord_polar(theta = "x")
+ labs(x = "", y = "")
ggplot(year_count, aes(factor(year), count, fill = factor(year)))
+ geom_bar(width = 1)
+ coord_polar(theta = "y")
ggplot(year_count, aes(factor(year), count, fill = factor(year)))
+ geom_bar(width = 1)
ggplot(year_count, aes(factor(year), count, fill = factor(year))) +
geom_bar(width = 1) +
coord_polar(theta = "y")
ggplot(year_count, aes(factor(year), count, fill = factor(year))) +
geom_bar(width = 1) +
coord_polar(theta = "x")
ggplot(year_count, aes(factor(year), count, fill = factor(year))) +
geom_bar(width = 1) +
coord_polar()
ggplot(year_count, aes(factor(year), count, fill = factor(year))) +
geom_bar(width = 1
ggplot(year_count, aes(factor(year), count, fill = factor(year))) +
geom_bar(width = 1)
ggplot(year_count, aes(factor(year), count, fill = factor(year))) +
geom_bar(width = 1)
ggplot(year_count, aes(x=factor(year), y=count, fill = factor(year))) +
geom_bar(width = 1)
library(reshape2)
melted <- melt(year_count)
View(melted)
library(ggplot2)
year_count <- read.csv("year_count.csv")
ggplot(year_count, aes(x=factor(year), y=count, fill = factor(year))) +
geom_bar(width = 1)
gplot(year_count, aes(x=factor(year), y=count, fill = factor(year))) +
geom_bar(stat = "identity", width = 1)
ggplot(year_count, aes(x=factor(year), y=count, fill = factor(year))) +
geom_bar(stat = "identity", width = 1)
ggplot(year_count, aes(x=year, y=count, fill = year)) +
geom_bar(stat = "identity", width = 1)
ggplot(year_count, aes(x=year, y=count, fill = year)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x")
after <- read.csv("year_count_after80.csv")
before <- read.csv("year_count_pre80.csv")
ggplot(after, aes(x=year, y=count, fill = year)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x")
ggplot(after, aes(x=year, y=count, fill = year)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = 0)
ggplot(after, aes(x=year, y=count, fill = year)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = -12)
ggplot(after, aes(x=year, y=count, fill = year)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = 1)
ggplot(after, aes(x=year, y=count, fill = year)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = 0)
ggplot(after, aes(x=year, y=count, fill = year)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill = c("#E3F7E4", "06B310"))) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count))) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count)) +
geom_bar(stat = "identity", width = 1, color = c("#E3F7E4", "06B310"))+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
green <- c("#E3F7E4", "06B310")
ggplot(after, aes(x=year, y=count)) +
geom_bar(stat = "identity", width = 1, color = green)+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 1, color = green)+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
green <- c("#E3F7E4", "#06B310")
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 1, , color = "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 1, , fill = "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 1)+
scale_y_continuous(color=green) +
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
?scale_y_continuous
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 1, color = white, fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 1, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 2, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 0.8, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(before, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 0.8, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(before, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 1, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(before, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 2, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(before, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 4, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(before, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 7, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
before <- read.csv("year_count_pre80.csv")
ggplot(before, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 7, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
ggplot(after, aes(x=year, y=count, fill=year)) +
geom_bar(stat = "identity", width = 0.8, color = "white", fill= "#06B310")+
coord_polar(theta = "x", start = 0)+
theme(panel.background = element_rect(fill = "white"))
